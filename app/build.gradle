plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "com.qiusuo.videoeditor"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 100
        versionName "1.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {

        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    implementation("androidx.recyclerview:recyclerview:1.2.1")
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation("androidx.annotation:annotation:${androidx_annotation}")
    //retrofit
    implementation("com.squareup.retrofit2:retrofit:${versions_retrofit}")
    implementation("com.squareup.retrofit2:adapter-rxjava2:${versions_retrofit}")
    implementation("com.squareup.retrofit2:converter-gson:${versions_retrofit}")
    implementation("com.squareup.retrofit2:converter-scalars:${versions_retrofit}")

    //room
    implementation("androidx.room:room-runtime:${androidx_room}")
    implementation("androidx.room:room-rxjava2:${androidx_room}")
    implementation("androidx.room:room-ktx:${androidx_room}")
    kapt("androidx.room:room-compiler:${androidx_room}")

    //状态栏
    // 基础依赖包，必须要依赖
    implementation 'com.gyf.immersionbar:immersionbar:3.0.0'
// fragment快速实现（可选）
    implementation 'com.gyf.immersionbar:immersionbar-components:3.0.0'
// kotlin扩展（可选）
    implementation 'com.gyf.immersionbar:immersionbar-ktx:3.0.0'
    //stdlib
    implementation("org.jetbrains.kotlin:kotlin-stdlib:${androidx_core}")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk7:${androidx_core}")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${androidx_core}")
    implementation("androidx.lifecycle:lifecycle-process:${androidx_lifecycle}")

    implementation("androidx.activity:activity-ktx:${androidx_activity_ktx}")
    implementation("androidx.fragment:fragment-ktx:${androidx_fragment_ktx}")

    // Glide
    implementation("com.github.bumptech.glide:glide:${version_glide}")
    implementation("com.github.bumptech.glide:okhttp3-integration:${version_glide}")
    kapt("com.github.bumptech.glide:compiler:${version_glide}")
    // 下拉刷新
    implementation("in.srain.cube:ultra-ptr:${versions_ptr}")
    // 右滑返回
    implementation("me.imid.swipebacklayout.lib:library:${versions_swipebacklayout}")

    // Lottie
    implementation("com.airbnb.android:lottie:${versions_lottie}")
    // Banner
    implementation("io.github.youth5201314:banner:${versions_banner}")

}